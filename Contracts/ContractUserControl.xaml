<UserControl x:Class="Contracts.ContractUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Contracts"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1000" Background="#272537">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="21*" />
            <RowDefinition Height="95*">
            </RowDefinition>
            <RowDefinition Height="34*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="195*"/>
                <ColumnDefinition Width="413*"/>
                <ColumnDefinition Width="192*"/>
            </Grid.ColumnDefinitions>

        </Grid>


        <TextBlock Text="Договоры"
                   TextAlignment="Center"
               FontWeight="Bold"
               Foreground="White" 
               FontSize="24" 
               HorizontalAlignment="Center" 
               VerticalAlignment="Center" Height="32" Width="336" />

        <!-- StackPanel для поля Login с тенью -->
        <Border Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" CornerRadius="10" Background="#4E4A67" Height="364" Width="980">
            <Border.Effect>
                <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="2" Opacity="0.5" />
            </Border.Effect>
            <Grid Margin="20">
                <!-- Определяем три столбца: для DataGrid, TextBox и кнопки -->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <!-- DataGrid растягивается -->
                    <ColumnDefinition Width="260.248" />
                    <ColumnDefinition Width="171.752"/>
                    <!-- TextBox занимает фиксированную ширину -->
                    <ColumnDefinition Width="Auto" />
                    <!-- Кнопка занимает фиксированную ширину -->
                </Grid.ColumnDefinitions>

                <!-- DataGrid с растягивающейся шириной -->
                <DataGrid CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" x:Name="dataGrid" AutoGenerateColumns="False" Background="#4E4A67" Foreground="White" AlternatingRowBackground="#4E4A67" RowBackground="#3E3A5D" Grid.ColumnSpan="4" Margin="0,62,0,0">
                    <DataGrid.Columns>
                        <!-- <DataGridTextColumn Header="ID" Binding="{Binding ID}" Width="*" /> -->
                        <DataGridTextColumn Header="Номер" Binding="{Binding ContractNumber}" Width="0.6*" />
                        <DataGridTextColumn Header="Дата начала" Binding="{Binding StartDate}" Width="0.7*" />
                        <DataGridTextColumn Header="Дата конца" Binding="{Binding EndDate}" Width="0.6*" />
                        <DataGridTextColumn Header="Комментарий" Binding="{Binding Comments}" Width="0.7*" />
                        <DataGridTextColumn Header="Штраф" Binding="{Binding Penalty}" Width="0.6*" />
                        <DataGridTextColumn Header="Пероиодичность оплаты" Binding="{Binding PaymentFrequencyName}" Width="1.2*" />
                        <DataGridTextColumn Header="Арендатор" Binding="{Binding RentorName}" Width="1.5*" />
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="#4E4A67" />
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background" Value="#3E3A5D" />
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Resources>
                        <!-- Стиль для заголовков столбцов -->
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Background" Value="#4E4A67" />
                            <!-- Цвет фона -->
                            <Setter Property="Foreground" Value="White" />
                            <!-- Цвет текста -->
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                        <Style TargetType="DataGridRowHeader">
                            <Setter Property="Background" Value="#4E4A67" />
                            <!-- Цвет фона -->
                            <Setter Property="Foreground" Value="White" />
                            <!-- Цвет текста -->
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DataGrid.Resources>
                </DataGrid>

                <!-- TextBox с фиксированным положением -->
                <TextBox TextAlignment="Left" VerticalAlignment="Top" Padding="7"
                 FontSize="16" FontWeight="Bold" Foreground="White" 
                 x:Name="searchTextBox" Background="#272537" 
                 Width="412" Height="40" Margin="264,0,140,0" Grid.ColumnSpan="3"/>

                <!-- Кнопка с фиксированным положением -->
                <Button Grid.Column="2" x:Name="searchButton" VerticalAlignment="Top" Margin="127,0,50,0"
                Content="Поиск по номеру" FontWeight="Bold" FontSize="14"
                IsEnabled="True" Height="40"
                Background="#4E4A67" Foreground="White" BorderBrush="Gray" 
                Click="ButtonClickSearch" Grid.ColumnSpan="2">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Border x:Name="ButtonBorder" 
    Background="{TemplateBinding Background}" 
    BorderBrush="{TemplateBinding BorderBrush}" 
    BorderThickness="0" 
    CornerRadius="10"
    Cursor="Hand">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="20" ShadowDepth="10" Opacity="0.5" />
                                    </Border.Effect>
                                    <ContentPresenter HorizontalAlignment="Center" 
                  VerticalAlignment="Center" />
                                </Border>
                                <!-- Применение трансформации для анимации -->
                                <Grid.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Grid.RenderTransform>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!-- Анимация при наведении -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Background" Value="#5E5A87" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>
        </Border>




        <Button
            Visibility="Hidden"
    x:Name="writeButton"
        Content="Добавить" FontWeight="Bold" FontSize="14"
    IsEnabled="False"
    Grid.Row="2" 
    Width="107" 
            Height="40"
    
    Background="#4E4A67" 
    Foreground="White" 
    BorderBrush="Gray" Click="ButtonClickAdd" Margin="670,31,23,31">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="ButtonBorder" 
    Background="{TemplateBinding Background}" 
    BorderBrush="{TemplateBinding BorderBrush}" 
    BorderThickness="0" 
    CornerRadius="10"
    Cursor="Hand">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="20" ShadowDepth="10" Opacity="0.5" />
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" 
                  VerticalAlignment="Center" />
                        </Border>
                        <!-- Применение трансформации для анимации -->
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Анимация при наведении -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#5E5A87" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>

        </Button>
        <Button
            Visibility="Hidden"
x:Name="editButton"
    Content="Изменить" FontWeight="Bold" FontSize="14"
IsEnabled="False"
Grid.Row="2" 
Width="118" 
            Height="40"

Background="#4E4A67" 
Foreground="White" 
BorderBrush="Gray" Click="ButtonClickEdit" Margin="508,31,174,31">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="ButtonBorder" 
    Background="{TemplateBinding Background}" 
    BorderBrush="{TemplateBinding BorderBrush}" 
    BorderThickness="0" 
    CornerRadius="10"
    Cursor="Hand">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="20" ShadowDepth="10" Opacity="0.5" />
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" 
                  VerticalAlignment="Center" />
                        </Border>
                        <!-- Применение трансформации для анимации -->
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Анимация при наведении -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#5E5A87" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>

        </Button>

        <Button
            Visibility="Hidden"
x:Name="deleteButton"
    Content="Удалить" FontWeight="Bold" FontSize="14"
IsEnabled="False"
Grid.Row="2" 
Width="116" 
Height="40"
HorizontalAlignment="Center" 
Background="#4E4A67" 
Foreground="White" 
BorderBrush="Gray" Click="ButtonClickDelete" Margin="0,31,0,31">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="ButtonBorder" 
    Background="{TemplateBinding Background}" 
    BorderBrush="{TemplateBinding BorderBrush}" 
    BorderThickness="0" 
    CornerRadius="10"
    Cursor="Hand">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="20" ShadowDepth="10" Opacity="0.5" />
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" 
                  VerticalAlignment="Center" />
                        </Border>
                        <!-- Применение трансформации для анимации -->
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Анимация при наведении -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#5E5A87" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>

        </Button>

        <Button
            Visibility="Hidden"
x:Name="moreButton"
    Content="Подробнее" FontWeight="Bold" FontSize="14"
IsEnabled="False"
Grid.Row="2" 
Width="116" 
Height="40"
HorizontalAlignment="Left" 
Background="#4E4A67" 
Foreground="White" 
BorderBrush="Gray" Click="ButtonClickMore" Margin="173,31,0,31">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="ButtonBorder" 
    Background="{TemplateBinding Background}" 
    BorderBrush="{TemplateBinding BorderBrush}" 
    BorderThickness="0" 
    CornerRadius="10"
    Cursor="Hand">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="20" ShadowDepth="10" Opacity="0.5" />
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" 
                  VerticalAlignment="Center" />
                        </Border>
                        <!-- Применение трансформации для анимации -->
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Анимация при наведении -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#5E5A87" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>

        </Button>

    </Grid>
</UserControl>
